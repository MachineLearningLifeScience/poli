[tox]
env_list =
    lint
    poli-base-py310
    poli-dockstring-py310
    poli-tdc-py310
    poli-protein-py310
    poli-rasp-py310
    poli-ehrlich-holo-py310
    poli-rosetta_energy
minversion = 4.10.0

[testenv]
description = run the tests with pytest
package = wheel
wheel_build_env = .pkg
allowlist_externals =
    sh
deps =
    pytest>=6
commands =
    sh -c "rm -rf ~/.poli_objectives/*.sh"
    sh -c "rm -rf ~/.poli_objectives/config.rc"

[testenv:lint]
description = check the code style with black
deps =
    black
    isort
    ruff
commands =
    black --check --diff .
    isort --profile black --check-only src/
    ruff check

[testenv:poli-base-py310]
description = run the tests with pytest on the base environment for poli
basepython = python3.10
wheel_build_env = .pkg
deps=
    {[testenv]deps}
    -r requirements.txt
    -e.
commands=
    {[testenv]commands}
    pytest {tty:--color=yes} -v -m "unmarked" {posargs}

[testenv:poli-tdc-py310]
description = run the tests with pytest on the TDC environment for poli
basepython = python3.10
wheel_build_env = .pkg
deps=
    {[testenv]deps}
    -r requirements.txt
    -e.[tdc]
commands=
    pytest {tty:--color=yes} -v -m "not slow and poli__tdc" {posargs}

[testenv:poli-protein-py310]
description = run the tests with pytest on the protein environment for poli
basepython = python3.10
wheel_build_env = .pkg
deps=
    {[testenv]deps}
    -r requirements.txt
    -e.[protein]
commands=
    pytest {tty:--color=yes} -v -m "not slow and poli__protein" {posargs}

[testenv:poli-lambo-py310]
description = run the tests with pytest on the lambo environment for poli
basepython = python3.10
wheel_build_env = .pkg
deps=
    {[testenv]deps}
    -r requirements.txt
    -e.[lambo]
commands=
    pytest {tty:--color=yes} -v -m "not slow and poli__lambo" {posargs}

[testenv:poli-dockstring-py310]
description = run the tests with pytest on the dockstring environment for poli
basepython = python3.10
wheel_build_env = .pkg
deps=
    {[testenv]deps}
    -r requirements.txt
    -e.[dockstring]
commands=
    pytest {tty:--color=yes} -v -m "not slow and poli__dockstring" {posargs}

[testenv:poli-rasp-py310]
description = run the tests with pytest on the RaSP environment for poli
basepython = python3.10
wheel_build_env = .pkg
deps=
    {[testenv]deps}
    -r requirements.txt
    -e.
commands=
    sh -c 'if conda info --envs | grep -q poli__rasp; then echo "poli__rasp already exists"; else conda env create -f ./src/poli/objective_repository/rasp/environment.yml; fi'
    sh -c "conda run -n poli__rasp python -m pip uninstall -y poli"
    sh -c "conda run -n poli__rasp python -m pip install -e ."
    pytest {tty:--color=yes} -v -m "not slow and poli__rasp" {posargs}

[testenv:poli-rmf-py310]
description = run the tests with pytest on the rmf environment for poli
basepython = python3.10
wheel_build_env = .pkg
deps=
    {[testenv]deps}
    -r requirements.txt
    -e.[rmf]
commands=
    pytest {tty:--color=yes} -v -m 'not slow and poli__rmf' {posargs}

[testenv:poli-ehrlich-holo-py310]
description = run the tests with pytest on the ehrlich environment for poli
basepython = python3.10
wheel_build_env = .pkg
deps=
    {[testenv]deps}
    -r requirements.txt
    -e.[ehrlich_holo]
commands=
    pytest {tty:--color=yes} -v -m 'not slow and poli__ehrlich_holo' {posargs}

[testenv:poli-rosetta_energy]
description = run the tests with pytest on the rosetta_energy environment for poli
basepython = python3.9
wheel_build_env = .pkg
deps=
    {[testenv]deps}
    -r requirements.txt
    -e.
commands=
    sh -c 'if conda info --envs | grep -q poli__rosetta_energy; then echo "poli__rosetta_energy already exists"; else conda env create -f ./src/poli/objective_repository/rosetta_energy/environment.yml; fi'
    sh -c "conda run -n poli__rosetta_energy python -m pip uninstall -y poli"
    sh -c "conda run -n poli__rosetta_energy python -m pip install -e ."
    pytest {tty:--color=yes} -v -m "not slow and poli__rosetta_energy" {posargs}